@page "/login"
@using PersonalExpenseTracker.Components.Layout
@using PersonalExpenseTracker.Model
@using PersonalExpenseTracker.Services
@inject IUserService _userService
@inject NavigationManager NavManager
@inject ISessionService _sessionService



<div class="vh-100 d-flex justify-content-center align-items-center" style="position: fixed; top: 0; left: 0; right: 0; bottom: 0;">
    <div class="card p-4 shadow" style="width: 400px;">
        <h3 class="text-center mb-4">Welcome Back</h3>
        <p class="text-center text-muted">Please enter your details for login</p>
        <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator/>
            <ValidationSummary/>


            <!-- Username Field -->
            <div class="mb-3">
                <label for="username" class="form-label">Username</label>
                <input type="text" id="username" @bind-value="loginModel.Username" class="form-control" placeholder="Enter your username" />
                <ValidationMessage For="@(() => loginModel.Username)" />
            </div>

            <!-- Password Field -->
            <div class="mb-3">
                <label for="password" class="form-label">Password</label>
                <input type="password" id="password" @bind-value="loginModel.Password" class="form-control" placeholder="Enter your password" />
                <ValidationMessage For="@(() => loginModel.Password)" />
            </div>

            <!-- Preferred Currency Dropdown -->
            <div class="mb-4">
                <label for="preferredCurrency" class="form-label">Preferred Currency</label>
                <select id="preferredCurrency" @bind="loginModel.PreferredCurrency" class="form-select">
                    <option selected disabled>Select your currency</option>
                    <option value="USD">USD - US Dollar</option>
                    <option value="NPR">NPR - Nepalese Rupees</option>
                    <option value="INR">INR - Indian Rupee</option>
                    <option value="GBP">GBP - British Pound</option>
                </select>
                <ValidationMessage For="@(() => loginModel.PreferredCurrency)" />
            </div>

            <!-- Login Button -->
            <div class="d-grid">
                <button type="submit" class="btn btn-primary">Login</button>
            </div>
        </EditForm>

        <!-- Error Message -->
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger mt-3" role="alert">
                @errorMessage
            </div>
        }

        <!-- Register Link -->
        <div class="text-center mt-3">
            <p class="text-muted">
                If you don't have an account,
                <a href="/register" class="text-decoration-none">register here</a>.
            </p>
        </div>
    </div>
</div>


@code {
    protected override async Task OnInitializedAsync()
    {
        _userService.creatUserTable();
    }

    private LoginModel loginModel = new LoginModel();
    private string errorMessage = string.Empty;

    private void HandleLogin()
    {
        try
        {
            var user = _userService.Login(loginModel.Username, loginModel.Password);

            if (user != null && user.PreferredCurrency == loginModel.PreferredCurrency)
            {
                errorMessage = string.Empty;
                _sessionService.Login(user.Username); // Set session state
                //Redirect
                NavManager.NavigateTo("/dashboard");

            }
            else
            {
                errorMessage = "Preferred currency mismatch. Please check your details.";
            }
        }
        catch(Exception e)
        {
            errorMessage = e.Message;
        }
    }
}
